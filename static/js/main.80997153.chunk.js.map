{"version":3,"sources":["Components/ListItem/index.js","Components/List/index.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["ListItem","props","useState","edit","setEdit","obj","value","editTodo","setEditTodo","className","type","onClick","handleDelete","id","onChange","event","target","handleUpdate","List","item","map","App","setItem","todo","setTodo","newId","itemObj","filter","copiedList","rmvId","currId","newObj","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wPAsCeA,EAnCE,SAACC,GAAW,IAAD,EACAC,oBAAS,GADT,mBACjBC,EADiB,KACXC,EADW,OAEQF,mBAASD,EAAMI,IAAIC,OAF3B,mBAEjBC,EAFiB,KAEPC,EAFO,KAoBxB,OACI,qCACI,uBAAMC,UAAU,OAAhB,0BAAkCR,EAAMI,IAAIC,SAC5C,wBAAQI,KAAK,SAASD,UAAU,OAAOE,QAnB5B,WACfP,GAAQ,IAkBJ,kBAA0E,IAC1E,wBAAQM,KAAK,SAASD,UAAU,SAASE,QAAS,kBAAMV,EAAMW,aAAaX,EAAMI,IAAIQ,KAArF,oBAAyG,uBAAK,uBAC7GV,GACG,qCACI,0BAAUG,MAAOC,EAAUE,UAAU,WAAWK,SAnB1C,SAACC,GACnBP,EAAYO,EAAMC,OAAOV,UAkBuE,uBACpF,wBAAQI,KAAK,SAASD,UAAU,WAAWE,QAhBxC,WACD,KAAXJ,IAECN,EAAMgB,aAAahB,EAAMI,IAAIQ,GAAIN,GACjCH,GAAQ,KAYA,yBCnBLc,G,MARF,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,KAAMP,EAAgC,EAAhCA,aAAcK,EAAkB,EAAlBA,aAC/B,OACI,qBAAKJ,GAAG,SAAR,SACGM,EAAKC,KAAI,SAACf,GAAD,OAAS,cAAC,EAAD,CAAuBA,IAAKA,EAAKO,aAAcA,EAAcK,aAAcA,GAA5DZ,EAAIQ,WCgEjCQ,MAnEf,WACC,IAAD,EACwBnB,mBAAS,IADjC,mBACQiB,EADR,KACaG,EADb,OAEyBpB,mBAAS,IAFlC,mBAEQqB,EAFR,KAEcC,EAFd,KAGKC,EAAQ,EAgDZ,OACA,sBAAKZ,GAAG,OAAR,UACC,2CACA,gCACC,0BAAUA,GAAG,OAAOP,MAAOiB,EAAMT,SA5Cd,SAACC,GACrBS,EAAQT,EAAMC,OAAOV,UA2CgD,uBACpE,wBAAQI,KAAK,SAASG,GAAG,MAAMF,QAzCjB,WACf,GAAU,KAAPY,EAAH,CAEA,IAAMG,EAAU,CACfb,IAbDM,EAAKQ,QAAO,SAACtB,GAAD,OAASA,EAAIQ,GAAGY,EAAQA,EAAMpB,EAAIQ,GAAKY,OACnDA,GAaCnB,MAAOiB,GAEFK,EAAU,sBAAOT,GAAP,CAAaO,IAC7BJ,EAAQM,GACRJ,EAAQ,MAgCP,oBAED,gCACC,uBAAK,cAAC,EAAD,CAAML,KAAMA,EAAMP,aAhCJ,SAAAiB,GACpB,IAAID,EAAaT,EAAKQ,QAAO,SAACtB,GAC7B,OAAGA,EAAIQ,KAAKgB,EACJxB,OAEP,KAEFiB,EAAQM,IAyB4CX,aAtBhC,SAACa,EAAQvB,GAC7B,IAAIqB,EAAaT,EAAKC,KAAI,SAACf,GAC1B,GAAGA,EAAIQ,KAAKiB,EACZ,CACC,IAAIC,EAAM,eAAO1B,GAEjB,OADA0B,EAAOzB,MAAQC,EACRwB,EAGP,OAAO1B,KAETiB,EAAQM,aCzCKI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.80997153.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport './index.css';\r\n\r\nconst ListItem = (props) => {\r\n    const [edit, setEdit] = useState(false);\r\n    const [editTodo, setEditTodo] = useState(props.obj.value);\r\n    \r\n    const handleEdit = () => {\r\n        setEdit(true);\r\n    };\r\n\r\n    const handleEditing = (event) => {\r\n        setEditTodo(event.target.value);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if(editTodo!==\"\")\r\n        {\r\n            props.handleUpdate(props.obj.id, editTodo);\r\n            setEdit(false);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <span className=\"list\">&#128073; {props.obj.value}</span>\r\n            <button type=\"button\" className=\"edit\" onClick={handleEdit}>Edit</button>{\" \"}\r\n            <button type=\"button\" className=\"delete\" onClick={() => props.handleDelete(props.obj.id)}>Delete</button><br/><br/>\r\n            {edit &&\r\n                <>\r\n                    <textarea value={editTodo} className=\"editTask\" onChange={handleEditing}></textarea><br/>\r\n                    <button type=\"button\" className=\"saveTask\" onClick={handleSave}>Save</button>\r\n                </>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport ListItem from '../ListItem';\r\nimport './index.css';\r\n\r\nconst List = ({item, handleDelete, handleUpdate}) => {\r\n    return(\r\n        <div id=\"myList\">\r\n          {item.map((obj) => <ListItem key={obj.id} obj={obj} handleDelete={handleDelete} handleUpdate={handleUpdate}/>)}  \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default List;","import React,{useState} from \"react\";\nimport \"./App.css\";\nimport List from '../List';\n\nfunction App() \n{\n\tconst [item,setItem] = useState([]);\n\tconst [todo, setTodo] = useState(\"\");\n\tlet newId = 0;\n\n\tconst getnewId = () => {\n\t\titem.filter((obj) => obj.id>newId ? newId=obj.id : newId);\n\t\tnewId++;\n\t\treturn newId;\n\t};\n\n\tconst handleChange = (event) => {\n\t\tsetTodo(event.target.value);\n\t};\n\n\tconst addItem = () => {\n\t\tif(todo===\"\")\n\t\t\treturn;\n\t\tconst itemObj = {\n\t\t\tid: getnewId(),\n\t\t\tvalue: todo,\n\t\t};\n\t\tconst copiedList = [...item, itemObj];\n\t\tsetItem(copiedList);\n\t\tsetTodo(\"\");\n\t};\n\n\tconst handleDelete = rmvId => {\n\t\tlet copiedList = item.filter((obj) => {\n\t\t\tif(obj.id!==rmvId)\n\t\t\t\treturn obj;\n\t\t\telse\n\t\t\t\treturn;\n\t\t});\n\t\tsetItem(copiedList);\n\t};\n\n\tconst handleUpdate = (currId, editTodo) => {\n\t\tlet copiedList = item.map((obj) => {\n\t\t\tif(obj.id===currId)\n\t\t\t{\n\t\t\t\tlet newObj = {...obj};\n\t\t\t\tnewObj.value = editTodo;\n\t\t\t\treturn newObj;\n\t\t\t}\n\t\t\telse\n\t\t\t\treturn obj;\n\t\t});\n\t\tsetItem(copiedList);\n\t};\n\n\treturn (\n\t<div id=\"main\">\n\t\t<h1>TODO LIST</h1>\n\t\t<div>\n\t\t\t<textarea id=\"task\" value={todo} onChange={handleChange}></textarea><br/>\n\t\t\t<button type=\"button\" id=\"btn\" onClick={addItem}>Add</button>\n\t\t</div>\n\t\t<div>\n\t\t\t<br/><List item={item} handleDelete={handleDelete} handleUpdate={handleUpdate}/>\n\t\t</div>\n\t</div>\n\t);\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}